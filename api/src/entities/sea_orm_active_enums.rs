//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use async_graphql::*;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
    Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Copy, Enum, Serialize, Deserialize,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "action")]
pub enum Action {
    #[sea_orm(string_value = "create_drop")]
    CreateDrop,
    #[sea_orm(string_value = "mint_edition")]
    MintEdition,
    #[sea_orm(string_value = "retry_mint")]
    RetryMint,
    #[sea_orm(string_value = "transfer_asset")]
    TransferAsset,
}

#[derive(
    Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Copy, Enum, Serialize, Deserialize,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "blockchain")]
pub enum Blockchain {
    #[sea_orm(string_value = "ethereum")]
    Ethereum,
    #[sea_orm(string_value = "polygon")]
    Polygon,
    #[sea_orm(string_value = "solana")]
    Solana,
}

#[derive(
    Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Copy, Enum, Serialize, Deserialize,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "deposit_reason")]
pub enum DepositReason {
    #[sea_orm(string_value = "gifted")]
    Gifted,
    #[sea_orm(string_value = "purchased")]
    Purchased,
}
